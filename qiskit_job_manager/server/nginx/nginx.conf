events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
# SSL configuration
    server {
        listen 80;

        # TODO: for HTTPS support
        # listen 443 ssl http2;
        # listen [::]:443 ssl http2; 

        # TODO: Specify you server domain name. Remember should be the same in your ssl_certificate
        server_name your_domain_name; 

        # TODO: Specify path to ssl_certificate if you want to support HTTPS
        # ssl_certificate      /etc/nginx_conf/server.pem;
        # ssl_certificate_key  /etc/nginx_conf/server.key.pem;

        # TODO: Specify client verification
        # ssl_client_certificate /etc/nginx_conf/authenticated_origin_pull_ca.pem;
        # ssl_verify_client on;

        # TODO: Specify path to allowed ip
        # include /etc/nginx_conf/allowed_ip.conf;
        # deny all;

        # Improve HTTPS performance with session resumption
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Enable server-side protection against BEAST attacks
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";

        # Aditional Security Headers
        # ref: https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

        # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
        add_header X-Frame-Options DENY always;

        # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
        add_header X-Content-Type-Options nosniff always;

        # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
        add_header X-Xss-Protection "1; mode=block" always;

        location / {
            proxy_pass http://app:8000;
        }

        access_log /etc/nginx_logs/access.log;
        error_log  /etc/nginx_logs/error.log;
    }
}